# vim: ft=sh

{{- if contains "tako" .chezmoi.hostname }}
# >>> Gaussian03 configure >>>
export g03root="/usr/local/pgi"
if [[ -d "${g03root}/g03" ]]; then
  source "${g03root}/g03/bsd/g03.profile"
  export GAUSS_SCRDIR="/scr"
  export PATH="${g03root}/g03${PATH:+:${PATH}}"
fi
# <<< Gaussian03 configure <<<

# >>> Gaussian09 configure >>>
export g09root="/usr/local/pgi"
if [[ -d "${g09root}/g09" ]]; then
  source "${g09root}/g09/bsd/g09.profile"
  export GAUSS_SCRDIR="${HOME}/.scr"
  export PATH="${g09root}/g09${PATH:+:${PATH}}"
fi
# <<< Gaussian09 configure <<<

# >>> GRRM11 configure >>>
export GRRMroot="/usr/local/GRRM11"
if [[ -d "${GRRMroot}" ]]; then
  export subgau="g09"
# export subgau="./g09grrm"
  export subchk="formchk"
  export subgrr="GRRM.out"
# export submol="molpro -W./"
  export PATH="${GRRMroot}${PATH:+:${PATH}}"
fi
# <<< GRRM11 configure <<<

# >>> PIMD configure >>>
if [[ -d "${HOME}/PIMD-MPI" ]]; then
  export PATH="${HOME}/PIMD-MPI/exe${PATH:+:${PATH}}"
elif [[ -d "${HOME}/pimd" ]]; then
  export PATH="${HOME}/pimd/exe${PATH:+:${PATH}}"
  export PATH="${HOME}/pimd/exe_xTB${PATH:+:${PATH}}"
fi
# <<< PIMD configure <<<

# >>> xTB 6.5.1 configure >>>
if [[ -d "${HOME}/xTB/xtb-6.5.1" ]]; then
  source "${HOME}/xTB/xtb-6.5.1/share/xtb/config_env.bash"
  export OMP_NUM_THREADS=1
  export OMP_STACKSIZE=512000
# export MKL_NUM_THREADS=4
fi
# <<< xTB 6.5.1 configure <<<

# >>> MPI configure >>>
if [[ -d "/opt/mpich2" ]]; then
  export PATH="/opt/mpich2/bin${PATH:+:${PATH}}"
fi
# <<< MPI configure <<<
{{- end }}

{{- if eq .chezmoi.hostname "tako50" }}

# >>> Quantum Espresso configure >>>
if [[ -d "/usr/local/bin/qe-7.2" ]]; then
  export PATH="/usr/local/bin/qe-1.7.2${PATH:+:${PATH}}"
fi
# <<< Quantum Espresso configure <<<

# >>> XCrySDen configure >>>
if [[ -d "/usr/local/bin/xcrysden-1.6.2" ]]; then
  export PATH="/usr/local/bin/xcrysden-1.6.2${PATH:+:${PATH}}"
elif [[ -d "/usr/local/bin/xcrysden-1.5.60" ]]; then
  export PATH="/usr/local/bin/xcrysden-1.5.60${PATH:+:${PATH}}"
fi
# <<< XCrySDen configure <<<

# >>> VESTA configure >>>
if [[ -d "/usr/local/bin/VESTA-3.5.8" ]]; then
  export PATH="/usr/local/bin/VESTA-3.5.8${PATH:+:${PATH}}"
  export LD_LIBRARY_PATH="/usr/local/bin/VESTA-3.5.8${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
fi
# <<< VESTA configure <<<
{{- end }}

{{- if ( or ( contains "tako" .chezmoi.hostname ) ( eq .chezmoi.username "tako" ) )}}

# >>> Intel compiler configure >>>
if [[ -e "/opt/intel/oneapi" ]]; then
  source "/opt/intel/oneapi/setvars.sh" > /dev/null
elif [[ -e "/opt/intel/compilers_and_libraries" ]]; then
  source "/opt/intel/compilers_and_libraries/linux/compilervars.sh" intel64 > /dev/null
elif [[ -e "/opt/intel/composerxe" ]]; then
  source "/opt/intel/composerxe/bin/compilervars.sh" intel64 > /dev/null
fi
# <<< Intel compiler configure <<<
{{- end }}

# >>> mise configure >>>
if [[ -e "${HOME}/.local/bin/mise" ]]; then
  export PATH="${XDG_DATA_HOME}/mise/shims${PATH:+:${PATH}}"
fi
# <<< mise configure <<<

# >>> TeXLive configure >>>
if [[ -e "/usr/local/texlive" ]]; then
  export PATH="/usr/local/texlive/latest/bin/x86_64-linux${PATH:+:${PATH}}"
  export MANPATH="/usr/local/texlive/latest/texmf-dist/doc/man${MANPATH:+:${MANPATH}}"
  export INFOPATH="/usr/local/texlive/latest/texmf-dist/doc/info${INFOPATH:+:${INFOPATH}}"
fi
# >>> TeXLive configure <<<

# >>> Perl configure >>>
if [[ -e "${HOME}/perl5" ]]; then
  export PATH="${HOME}/perl5/bin${PATH:+:${PATH}}"
  export PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
  export PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
  export PERL_MB_OPT="--install_base \"${HOME}/perl5\""
  export PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5"
fi
# <<< Perl configure <<<

# >>> Shell-utilities configure >>>
gitrepopath="${HOME}/git-repo"
if [[ -e "${gitrepopath}" ]]; then
  source "${gitrepopath}/shell-utilities/init.sh"
fi
unset gitrepopath
# <<< Shell-utilities configure <<<

# >>> General configure >>>
XDG_CONFIG_HOME="${HOME}/.config"
XDG_CACHE_HOME="${HOME}/.cache"
XDG_DATA_HOME="${HOME}/.local/share"
XDG_STATE_HOME="${HOME}/.local/state"

export LD_LIBRARY_PATH="/usr/local/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
export LIBRARY_PATH="/usr/local/lib${LIBRARY_PATH:+:${LIBRARY_PATH}}"

{{- if contains "WSL" .chezmoi.kernel.osrelease }}

if [[ "$(uname -r)" == *microsoft* ]]; then
  WINDOWS_USER=$(/mnt/c/Windows/System32/cmd.exe /c 'echo %USERNAME%' 2>/dev/null | sed -e 's/\r//g')
  export PATH="/mnt/c/Users/${WINDOWS_USER}/AppData/Local/Programs/Microsoft VS Code/bin${PATH:+:${PATH}}"
fi
unset WINDOWS_USER
{{- end }}

export PATH="${HOME}/bin${PATH:+:${PATH}}"
export PATH="${HOME}/.local/bin${PATH:+:${PATH}}"
export PATH="/snap/bin${PATH:+:${PATH}}"
# <<< General configure <<<

# >>> Personal configure >>>
{{- if eq .chezmoi.hostname "tako57" }}
export PATH="${HOME}/analysis/bondvec2csv${PATH:+:${PATH}}"
{{- end }}
# <<< Personal configure <<<
